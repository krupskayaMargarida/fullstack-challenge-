{"ast":null,"code":"var _jsxFileName = \"/Users/margarida/Desktop/carr appp/car-app/client/src/components/CarList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Car from \"./CarCard\";\nimport TextField from \"@mui/material/TextField\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\"; //maneira d passar classes em material ui// \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst classes = {\n  select: {\n    marginTop: 20,\n    marginBottom: 20\n  },\n  search: {\n    marginBottom: 20\n  }\n};\nexport default function CarList() {\n  _s();\n\n  const [selectedBrand, setBrand] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [brands, setBrands] = useState([]);\n  const [cars, setCars] = useState([]); //servidor \n\n  const [allCars, setAllCars] = useState([]); // p n ir ao servidor \n\n  const getCars = async brand => {\n    try {\n      let url = \"/cars\";\n\n      if (brand) {\n        url += `?brand=${brand}`;\n      }\n\n      const response = await axios.get(url);\n      setCars(response.data);\n      setAllCars(response.data);\n      setBrands([...new Set(response.data.map(car => car.brand))]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = event => {\n    setBrand(event.target.value);\n    getCars(event.target.value);\n  }; // We set this effect will run only once, after the initial render\n  // by setting the empty dependency array - []\n\n\n  useEffect(() => {\n    getCars(undefined);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"m\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      fullWidth: true,\n      style: classes.select,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        children: \"Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: selectedBrand,\n        label: \"Brand\",\n        onChange: handleChange,\n        children: brands.map(brand => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: brand,\n          children: brand\n        }, brand, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"filled-search\",\n      label: \"Filter by model\",\n      type: \"search\",\n      variant: \"filled\",\n      value: filter,\n      onChange: event => {\n        const {\n          value\n        } = event.target;\n        setFilter(value);\n        setCars(allCars.filter(car => car.model.toLowerCase().includes(event.target.value.toLowerCase())));\n      },\n      fullWidth: true,\n      style: classes.search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), \"//* mapping the cars from the server//****\", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: cars.map(car => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(Car, {\n          car: car\n        }, car._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, car._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CarList, \"bLt/iHmJTcsb6t3+CkExqdYfRNo=\");\n\n_c = CarList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CarList\");","map":{"version":3,"sources":["/Users/margarida/Desktop/carr appp/car-app/client/src/components/CarList.jsx"],"names":["React","useState","useEffect","axios","Car","TextField","InputLabel","MenuItem","FormControl","Select","Container","Grid","classes","select","marginTop","marginBottom","search","CarList","selectedBrand","setBrand","filter","setFilter","brands","setBrands","cars","setCars","allCars","setAllCars","getCars","brand","url","response","get","data","Set","map","car","error","console","log","handleChange","event","target","value","undefined","model","toLowerCase","includes","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Car from \"./CarCard\";\nimport TextField from \"@mui/material/TextField\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\n\n\n//maneira d passar classes em material ui// \nconst classes = {\n  select: {\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  search: {\n    marginBottom: 20,\n  },\n};\n\nexport default function CarList() {\n  const [selectedBrand, setBrand] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [brands, setBrands] = useState([]);\n  const [cars, setCars] = useState([]); //servidor \n  const [allCars, setAllCars] = useState([]); // p n ir ao servidor \n\n  const getCars = async (brand) => {\n    try {\n      let url = \"/cars\";\n      if (brand) {\n        url += `?brand=${brand}`;\n      }\n      const response = await axios.get(url);\n      setCars(response.data);\n      setAllCars(response.data);\n      setBrands([...new Set(response.data.map((car) => car.brand))]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = (event) => {\n    setBrand(event.target.value);\n    getCars(event.target.value);\n  };\n\n  // We set this effect will run only once, after the initial render\n  // by setting the empty dependency array - []\n  useEffect(() => {\n    getCars(undefined);\n  }, []);\n\n  return (\n    <Container maxWidth=\"m\">\n      <FormControl fullWidth style={classes.select}>\n        <InputLabel id=\"demo-simple-select-label\">Brand</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={selectedBrand}\n          label=\"Brand\"\n          onChange={handleChange}\n        >\n          {brands.map((brand) => (\n            <MenuItem key={brand} value={brand}>\n              {brand}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n      <TextField\n        id=\"filled-search\"\n        label=\"Filter by model\"\n        type=\"search\"\n        variant=\"filled\"\n        value={filter}\n        onChange={(event) => {\n          const { value } = event.target;\n          setFilter(value);\n          setCars(\n            allCars.filter((car) =>\n              car.model.toLowerCase().includes(event.target.value.toLowerCase())\n            )\n          );\n        }}\n        fullWidth\n        style={classes.search}\n      />\n      //* mapping the cars from the server//**** \n      <Grid container spacing={2}>\n      \n        {cars.map((car) => (\n          <Grid key={car._id} item xs={6}>\n            <Car key={car._id} car={car} />\n          </Grid>\n        ))}\n      </Grid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}